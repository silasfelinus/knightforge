Hi, ChatGPT! I'm Silas Knight.
I'm building a gui development lab using Vue3, Quasar, and Pinia
I have the following structure:

[Project]
WonderForge

[INTENT]
An inviting sandbox to make and chain programmatic API calls with a friendly, pleasing interface that also serves as a portfolio showpiece.

[DEV ENVIRONMENT]
Ubuntu 22, Visual Studio Code, Chrome, Node LTS 18.15.0

[MODULES]
Vue 3, TypeScript, ES-Lint, Prettier, SASS, Quasar, Pinia, VueRouter

[STANDARDS]
Material Design, Composition API, Prettify, SCSS, Pinia Setup Stores

[ICONSET]
fontawesome-v6

[COLORS]
$primary, $secondary, $accent, $dark, $warning, $dark-page, $positive, $negative, $info

[FUTUREGOALS]
Step-Based Save System
User Logins
Night Mode
Live Chat
OpenAI Secure Key Storage
ChatGPT Chat
PlaySpace Toys (Superball Cannon, Graffiti Spray Paint, Secret 2D Adventure Mode, Bouncing Balls, Destructible Screen Effects)

[INTENDED FILE TYPES]
txt, yaml, json, svg, jpg, png, gif, wmv, mp4, db, pdf, webp

[GUIDELINES]
Use and recommend Quasar components when available
Use Pinia index.ts store for state management
Adhere to current TypeScript standards
Separate concerns
Avoid hardcoding data in application logic
Always style <style scoped lang="scss">

[PRIMARY FOLDERS]
./src/
./components/labspace/
./components/screenspace/
./components/playspace/
./router/index.ts
./stores/app.ts
./stores/types.ts
./css/quasar.variables
./pages/: ScreenSet1, ScreenSet2, UnderConstruction, ErrorNotFound

[LAYOUTS]
/layouts: HeaderWidget.vue, FooterWidget.vue, MainLayout.vue

[Screenspace]
/screenspace: RemoteControl.vue, useRemoteControl.ts, ScreenWidget.vue, ScreenCard.vue, ScreenWidgetWrapper.vue

[LABSPACE]
./components/labSpace/ (API Chain Project)
CardCable.vue - logic to connect  Codecards for API chain processing
CardManager.vue - create/edit/delete codecards
CardMat.vue - droppable space for codecards
CodeCard.vue - stylized cards to represent natural language processor api calls
DataUpload.vue - drag-and-drop local file upload
RedSwitch.vue - gui toggle
TextInput.vue - stylized input field for text

[PLAYSPACE]
./components/playSpace/ (Silly Widgets, Games, Social Chat)
Paintbox.vue - toolbox for paintbrushes
PaintCanvas.vue - gui space for paint effects
SplashWidget.vue - slideshow image viewer
ChatWidget.vue - livechat & chatgpt


[PINIA STORE]
State: leftScreen, mainScreen, rightScreen, widgetSettings
Getters: widgetSettings
Actions: changePreset, nextPreset, toggleVisibility, updateWidgetTitle, updateWidgetBgColor

[PROGRESS]
Installed Quasar CLI, Vue3, SASS
Created App.vue, HeaderWidget.vue, ScreenWidget.vue, and FooterWidget.vue
Created dummy preset components
Set up variable references and SCSS styling
Migrated from Vuex to Pinia
Created router/index.ts
Moved layout components to layouts/
Created ScreenWidgetWrapper
Moved screen elements into components/screenspace
Updated outline and project docs

[STATUS]
I'm going to send you the project files, you reply back with code improvements, tips, and general
tuorial advice on what I'm showing you. I want to be a better coder, fundamentally grok the structure,
and write really solid, mature code that I can wield and craft to my liking. But I need your help to get there. Thank you!
