[INTRODUCTION]
Hi, ChatGPT! I'm Silas Knight. I'm building an SPA using Vue3, Composition API, Quasar, and Pinia.

[PROJECT]
WonderForge

[INTENT]
A gui sandbox for rapidly protoyping development and coding projects
(with a pleasing interface and best practices to serve as a portfolio showpiece)

[DEV ENVIRONMENT]
Ubuntu 22, VSC, Chrome, Node LTS 18.15.0

[MODULES]
Vue 3, TypeScript, fontawesome-v6, ES-Lint, Prettier, SASS, Quasar, Pinia, Vue-Router, vuedraggable, vue-resizable

[STANDARDS]
Material Design, Composition API, Prettier, SCSS, Pinia Setup Stores
Use <script lang="ts">
Use <style scoped lang="scss">
Use Quasar components when available
Use Pinia useAppStore.ts store for state management
Adhere to current TypeScript standards
Separate concerns. Avoid hardcoding data in application logic

[VARIABLES]
colors: $primary, $secondary, $accent, $dark, $warning, $dark-page, $positive, $negative, $info

[DEVELOPING FEATURES]
Step-Based Save System
User Logins
Night Mode
Playspace Paint mode
Labspace API Card GUI
Screenspace Screen/Card Management
Chat
ScreenSpace Remote Control

[FUTUREGOALS]
OpenAI Secure Key Storage
PlaySpace Toys (Superball Cannon, Graffiti Secret 2D Adventure Mode, Bouncing Balls, Destructible Screen Effects)

[INTENDED FILE TYPES]
txt, yaml, json, svg, jpg, png, gif, wmv, mp4, db, pdf, webp

[DIRECTORY]
WonderForge/
├── quasar.config.js
├── src/
│   ├── main.ts
│   ├── App.vue
│   ├── assets/
│   ├── boot/
│   ├── components/
│   ├── css/
│   ├── layouts/
│   ├── pages/
│   ├── router/
│   └── stores/
└── public/
    └── images/

[PRIMARY FOLDERS]
./router/index.ts
./stores/useAppStore.ts
./stores/useAuthStore.ts
./stores/types.ts
./css/quasar.variables
./components/labspace/
./components/screenspace/
./components/playspace/

[LAYOUTS]
/layouts: HeaderWidget.vue, FooterWidget.vue, MainLayout.vue
./pages/: ErrorNotFound, Loginform, ScreenSet00, ScreenSet01, ScreenSet02, UnderConstruction

[SCREENSPACE]
/screenspace: RemoteControl.vue, useRemoteControl.ts, ScreenWidget.vue, ScreenCard.vue, ScreenWidgetWrapper.vue

[LABSPACE]
./components/labSpace/ (API Chain Project)
CardCable.vue - logic to connect  Codecards for API chain processing
CardManager.vue - create/edit/delete codecards
CardMat.vue - droppable space for codecards
CodeCard.vue - stylized cards to represent natural language processor api calls
DataUpload.vue - drag-and-drop local file upload
RedSwitch.vue - gui toggle
TextInput.vue - stylized input field for text

[PLAYSPACE]
./components/playSpace/ (Silly Widgets, Games, Social Chat)
Paintbox.vue - toolbox for paintbrushes
PaintCanvas.vue - gui space for paint effects
SplashWidget.vue - slideshow image viewer
ChatWidget.vue - livechat & chatgpt

[PINIA STORE] [this section needs updating]
State: leftScreen, mainScreen, rightScreen, widgetSettings
Getters: widgetSettings, Presets
Actions: changePreset, nextPreset, toggleVisibility, updateWidgetTitle, updateWidgetBgColor

[PROGRESS]
Installed Quasar CLI, Vue3, SASS
Created App.vue, HeaderWidget.vue, ScreenWidget.vue, and FooterWidget.vue
Created Preset components
Set up variable references and SCSS styling
Migrated from Vuex to Pinia
Created router/index.ts
reconfigured folder structure
Created ScreenWidgetWrapper
fixed routing problems making @ unrecognized by dev build
Created ScreenSet00.vue for debug warning screen
Added feature set to Footer and Header
Added demo login setup

[STATUS]
We're iterating through files, making sure that we're following our structure.

[SUGGESTED REPLY FORMAT]
a. fun emoticon and fun and inspiring phrase
1. Comment on code and project thus far
2. Improved Code that will work within our structure
3. The file or files you'd like to see next
4. Any Additional comments

[CURRENT]
We're testing basic functions with demo setup for a feature rich header nad footer set, demo logins, and revised stores.
Things were already broke, so this is a remodel, help me reach basic functions:

Main.ts launches App.vue
App.vue launches HeaderWidget, MainLayout, FooterWidget, each with Preset "Warning"
HeaderWidget, MainLayout, and FeatureWidget show $warning color with proper spacing (Header on top of screen, footer at bottom, mainlayout between, no bleed)

[main.ts]
import { createApp } from 'vue';
import App from '@/App.vue';
import router from './router'; // Import the router instance, not the routes
import { createPinia } from 'pinia';

const app = createApp(App);

// Use the router
app.use(router);

// Use the Pinia store
app.use(createPinia());

app.mount('#app');
