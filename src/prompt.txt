[INTRODUCTION]
Hi, ChatGPT! I'm Silas Knight. I'm building an SPA using Vue3, Composition API, Quasar, and Pinia.

[PROJECT]
WonderForge

[INTENT]
A gui sandbox for rapidly protoyping development and coding projects
(with a pleasing interface and best practices to serve as a portfolio showpiece)

[DEV ENVIRONMENT]
Ubuntu 22, VSC, Chrome, Node LTS 18.15.0

[RUN COMMAND]
"quasar dev"

[MODULES]
@typescript-eslint/parser @typescript-eslint/eslint-plugin eslint eslint-config-prettier eslint-plugin-prettier prettier
quasar pinia vue-tsc @vue/compiler-sfc
Vue3, fontawesome-v6, SASS, Vue-Router, vuedraggable, vue-resizable

[STANDARDS]
Material Design, Composition API, Prettier, SCSS, Pinia Setup Stores
Use <script lang="ts">
Use <style scoped lang="scss">
Use Quasar components when available
Use Pinia useAppStore.ts store for state management
Adhere to current TypeScript standards
Separate concerns. Avoid hardcoding data in application logic

[VARIABLES]
colors: $primary, $secondary, $accent, $dark, $warning, $dark-page, $positive, $negative, $info

[DEVELOPING FEATURES]
Step-Based Save System
User Logins
Night Mode
Playspace Paint mode
Labspace API Card GUI
Screenspace Screen/Card Management
Chat
ScreenSpace Remote Control

[FUTUREGOALS]
OpenAI Secure Key Storage
PlaySpace Toys (Superball Cannon, Graffiti Secret 2D Adventure Mode, Bouncing Balls, Destructible Screen Effects)

[INTENDED FILE TYPES]
txt, yaml, json, svg, jpg, png, gif, wmv, mp4, db, pdf, webp

[DIRECTORY]
WonderForge/
├── quasar.config.js
├── src/
│   ├── main.ts
│   ├── App.vue
│   ├── assets/
│   ├── boot/
│   ├── components/
│   ├── css/
│   ├── layouts/
│   ├── pages/
│   ├── router/
│   └── stores/
└── public/
    └── images/

[PRIMARY FOLDERS]
./router/index.ts
./stores/useAppStore.ts
./stores/useAuthStore.ts (not implemented)
./stores/types.ts
./css/quasar.variables
[layouts/] Presets, AppSimple, AppWorking, AppFull
[pages/] ErrorNotFound, Footer, Header, LoginForm, MainWindow, Sidebar, SplashScreen, UnderConstruction, WarningScreen
[src/] Main, App.vue

[PRESET LOADS]


[PROGRESS]
Installed Quasar CLI, Vue3, SASS
Created Preset components
Set up variable references and SCSS styling
fixed routing problems making @ unrecognized by dev build
Added demo login, preset routing,  and Simple/Working/Full App presets
main.ts loads App.vue and shows splash image (woohoo)


[SUGGESTED REPLY FORMAT]
a. fun emoticon and fun and inspiring phrase
1. Comment on code and project thus far
2. Improved Code that will work within our structure
3. The file or files you'd like to see next
4. Any Additional comments

[BASIC FUNCTIONS]


Help me decide my basic structure from here. I want
main.ts loads router/index.ts, and stores/useAppStore.ts
App.vue loads the default Preset (AppSimple) from index.ts
Appsimple load SplashScreen.vue

Work with me as we setup next steps:
AppSimple loads UnderConstruction.vue
AppWorking loads MainWindow.vue
AppFull loads Header, SplashScreen, Footer
