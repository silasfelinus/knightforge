HomePage design:
Butterfly Forge
A multi-layered SPA in vue3, material design, quasar.

Concept:
Wrap homepage in a MascotManager, and then create a layered series of windows to represent a shifting 3d perspetive, with each window layer represented by a z-axis, and display a Mascot (ButterflyMascot) moving layer to layer, shifting in size depending on the z lAYER. 



<template>
  <div
    class="butterfly"
    :style="`transform: translate3d(${x}px, ${y}px, 0) rotate3d(1, 0.5, 0, 110deg) scale(${scaleFactor})`"
  >
    <div class="left-wing">
      <div class="top"></div>
      <div class="bottom"></div>
    </div>
    <div class="right-wing">
      <div class="top"></div>
      <div class="bottom"></div>
    </div>
  </div>
</template>

<script lang="ts">
import { defineComponent, ref, onMounted, watch } from 'vue';

export default defineComponent({
  name: 'ButterflyMascot',
  props: {
    xPos: {
      type: Number,
      default: 0,
    },
    yPos: {
      type: Number,
      default: 0,
    },
    zPos: {
      type: Number,
      default: 0,
    },
  },
  setup(props) {
    const x = ref(props.xPos);
    const y = ref(props.yPos);
    const z = ref(props.zPos);
    const directionX = ref(true);
    const directionY = ref(true);
    const scaleFactor = ref(1);

    watch(z, (newZ) => {
      scaleFactor.value = 1 - newZ / 100;
    });

    onMounted(() => {
      init();
      animate();
    });

    function init() {
      x.value = Math.floor(Math.random() * window.innerWidth);
      y.value = Math.floor(Math.random() * window.innerHeight);
    }

    function moveButterfly(newX: number, newY: number, newZ: number) {
      x.value = newX;
      y.value = newY;
      z.value = newZ;
    }

    function land() {
      // ...
    }

    function slowDown() {
      // ...
    }

    function animate() {
      // ...
    }

    return {
      x,
      y,
      z,
      directionX,
      directionY,
      scaleFactor,
      init,
      moveButterfly,
      land,
      slowDown,
      animate,
    };
  },
});
</script>

<style scoped>
/* ... (styles remain unchanged) ... */
</style>
