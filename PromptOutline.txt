[INTRODUCTION]
👋 Hi, ChatGPT! I'm Silas Knight. We're building an SPA using Vue3, Composition API, Quasar, and Pinia.

[PROJECT]
🔧 WonderForge: GUI sandbox for designing and prototyping coding projects (portfolio showpiece)

[DEV ENVIRONMENT]
💻 Ubuntu 22, VSC, Chrome, Node LTS 18.15.0

[REFERENCE]
Vue3 (https://vuejs.org/guide/introduction.html)
Vue-Router (https://router.vuejs.org/guide/)
Typescript (https://www.typescriptlang.org/)
Babel (https://babeljs.io/)
Jest (https://jestjs.io/docs/getting-started)
Vue3-Jest-Typescript Testing - (https://vuejs.org/guide/scaling-up/testing.html#testing-with-jest)
Quasar CLI (https://quasar.dev/start/quasar-cli)
Pinia (https://pinia.vuejs.org/)

[MODULES]
📦 npm install --save-dev eslint eslint-plugin-prettier prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin @vue/eslint-config-typescript @vue/eslint-config-prettier eslint-plugin-vue @vue/compiler-sfc vue-tsc vue-router pinia quasar sass magic-string@latest npm-check-updates interactjs

[COMMANDS]
"npm run lint -- --fix" //auto-fix prettier
"ncu" && "ncu -u" //update node modules
🚀 "quasar dev"  //launch dev mode

[STANDARDS]
🌟 Material Design, Composition API, Prettier, SCSS, Pinia Setup Stores, TypeScript standards, Kaizen, DRY Principle

[DEVELOPING FEATURES]
🌈 Gamescreen Interface, interactibles, Asset Management

[INTENDED FILE TYPES]
📁 txt, yaml, json, svg, jpg, png, gif, wmv, mp4, db, pdf, webp

[DIRECTORY]
🗂 WonderForge/
├── quasar.config.js
├── src/
│ ├── main.ts, App.vue
│ ├── assets/audio/
│ ├── assets/images/
│ ├── assets/text/
│ ├── boot/
│ ├── components/artgallery/
│ ├── components/assetmanager/
│ ├── components/codecards/
│ ├── components/gamescreen/
│ ├── components/screenfx/
│ ├── css/app.scss
│ ├── css/quasar.variables.scss
│ ├── layout/
│ ├── views/
│ ├── router/index.ts
│ ├── router/ActiveComponents.ts
│ └── stores/useAppStore.ts
│ └── stores/types.ts
└── public/images/

[PROGRESS]
Installed modules, basic routing and page structures, created HomePage layout, beginning voice integration with SpeechKitt, accordion gallery, moved style and design sections to "WonderForge Styleguide", ButterflyMascot interactible, draggable-resizable magicscreen, remodeled router to use ActiveComponents, setup lazy loading, redesigned overall site structure.

[CONFIGURATION FILES]
index.html, quasar.config.js, tsconfig.json, postcss.config.js, .eslintrc.js, .prettierrc, package.json

[./layout]
HomePage: () => import('../layout/HomePage.vue'), //Home
ErrorScreen: () => import('../layout/ErrorScreen.vue'), //404
UnderConstruction: () => import('../layout/UnderConstruction.vue'), //Under Construction
TitleBar: () => import('../layout/TitleBar.vue'), //stylized title
NavigationMenu: () => import('../layout/NavigationMenu.vue'), //isActive components
AccordionGallery: () => import('../layout/AccordionGallery.vue'), //website configuration
ChatInterface: () => import('../layout/ChatInterface.vue'), // Chatroom Interface
VoiceControl: () => import('../layout/VoiceControl.vue'), //basic voice pickup and text output
UserLogin: () => import('../layout/UserLogin.vue'), //User Login
SettingsPanel: () => import('../layout/SettingsPanel.vue'), //User Settings
RandomText: () => import('../layout/RandomMessage.vue'), //RandomText(parameters)
RandomImage: () => import('../layout/RandomImage.vue'), // RandomImage(parameters)
TextInput: () => import('../layout/TextInput.vue'), // Text Input Window

[./components/assetmanager/]
AssetManager: () => import('../components/manage/AssetManager.vue'), // Asset manager
EffectsManager: () => import('../components/manage/EffectsManager.vue'), // AssetManager customized for background screen effects
ToyboxManager: () => import('../components/manage/ToyboxManager.vue'), // EffectsManager customized for user interactions
ArtManager: () => import('../components/manage/ArtManager.vue'), // AssetManager customized for images
GameManager: () => import('../components/manage/GameManager.vue'), // AssetManager customized for gamescreen games
PromptDesigner: () => import('../components/manage/PromptDesigner.vue'), //AssetManager customized for text management
ProjectManager: () => import('../components/manage/ProjectManager.vue'), //AssetManager customized for project planning
CardDesigner: () => import('../components/manage/CardDesigner.vue'), //AssetManager customized for interface design
CodeDesigner: () => import('../components/manage/CodeDesigner.vue'), //AssetManager customized for code design
ApiManager: () => import('../components/manage/ApiManager.vue'), //AssetManager customized for Api interactions
SiteDesigner: () => import('../components/manage/SiteDesigner.vue'), //AssetManager customized for website design
GalleryDesigner: () => import('../components/manage/GalleryDesigner.vue'), //SiteDesigner customized for art gallery design
TaskManager: () => import('../components/manage/TaskManager.vue'), //SiteDesigner customized for task management lists

[./components/codecards/]
CodeCard: () => import('../components/cards/CodeCard.vue'), // Base class for customizable cards
AvatarCard: () => import('../components/cards/AvatarCard.vue'), // Avatar CodeCard
UserCard: () => import('../components/cards/UserCard.vue'), //AvatarCard for custom user avatar
RobotCard: () => import('../components/cards/RobotCard.vue'), //AvatarCard with API Implementation
ChatGPTCard: () => import('../components/cards/ChatGPTCard.vue'), //RobotCard with ChatGPT Implementation
PromptCard: () => import('../components/cards/PromptCard.vue'), //ChatGPTCard with PromptDesigner implementation
ArtistCard: () => import('../components/cards/ArtistCard.vue'), //AvatarCard for Stable Diffusion Modeller Implementation
ArtCard: () => import('../components/cards/ArtCard.vue'), //CodeCard for Art Assets
AlexaCard: () => import('../components/cards/AlexaCard.vue'), //RobotCard with Alexa implementation

[./components/screenfx/]
RainDrops: () => import('../components/screenfx/RainEffect.vue'), //background screen effect
LavaLamp: () => import('../components/screenfx/LavaLamp.vue'), //background screen effect
SoapBubbles: () => import('../components/screenfx/SoapBubbles.vue'), //background screen effect
SplashImage: () => import('../components/screenfx/SplashImage.vue'), //background screen effect
ButterflyMascot: () => import('../components/screenfx/ButterflyMascot.vue'), //website mascot interactible
MagicFrame: () => import('../components/screenfx/MagicFrame.vue'), //resizeable and draggable stylized window frame
MagicRemote: () => import('../components/screenfx/MagicRemote.vue'), //modular interface controller

[./components/gamescreen/]
GameScreen: () => import('../components/game/GameScreen.vue'), //modular screen display interface with step-based save system
MiniPlanet: () => import('../components/game/MiniPlanet.vue'), //Gamescreen panel with minimal interface and layer management
ChatBot: () => import('../components/game/ChatBot.vue'), //Gamescreen interface panel for openai chat
ArtAcademy: () => import('../components/game/ArtAcademy.vue'), //Gamescreen interface panel for Stable Diffusion Art Generation
AdventurePanel: () => import('../components/game/AdventurePanel.vue'), //Gamescreen interface panel for text adventures
CosmosGame: () => import('../components/game/CosmosGame.vue'), //AdventurePanel with PromptCard implementation
SerendipityGame: () => import('../components/game/SerendipityGame.vue'), //CosmosGame with TaskManagement implementation

[./componentsartgallery/]
ArtGallery: () => import('../components/gallery/ArtGallery.vue'), //customizable Art Asset gallery viewer
GiftShop: () => import('../components/gallery/GiftShop.vue'), //Art Gallery with POD integration
MembershipClub: () => import('../components/gallery/MembershipClub.vue'), //subscription portal
ShoppingCart: () => import('../components/gallery/ShoppingCart.vue'), //shopping cart
