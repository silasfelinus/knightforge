[INTRODUCTION]
👋 Hi, ChatGPT! I'm Silas Knight. We're building an SPA using Vue3, Composition API, Quasar, and Pinia.

[PROJECT]
🔧 WonderForge: GUI sandbox for designing and prototyping coding projects (portfolio showpiece)

[DEV ENVIRONMENT]
💻 Ubuntu 22, VSC, Chrome, Node LTS 18.15.0

[REFERENCE]
Vue3 (https://vuejs.org/guide/introduction.html)
Vue-Router (https://router.vuejs.org/guide/)
Typescript (https://www.typescriptlang.org/)
Babel (https://babeljs.io/)
Jest (https://jestjs.io/docs/getting-started)
Vue3-Jest-Typescript Testing - (https://vuejs.org/guide/scaling-up/testing.html#testing-with-jest)
Quasar CLI (https://quasar.dev/start/quasar-cli)
Pinia (https://pinia.vuejs.org/)

[MODULES]
📦 npm install --save-dev eslint eslint-plugin-prettier prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin @vue/eslint-config-typescript @vue/eslint-config-prettier eslint-plugin-vue @vue/compiler-sfc vue-tsc vue-router pinia quasar sass magic-string@latest npm-check-updates interactjs

[COMMANDS]
"npm run lint -- --fix" //auto-fix prettier
"ncu" && "ncu -u" //update node modules
🚀 "quasar dev"  //launch dev mode

[STANDARDS]
🌟 Material Design, Composition API, Prettier, SCSS, Pinia Setup Stores, TypeScript standards, Kaizen, DRY Principle

[DEVELOPING FEATURES]
🌈 Gamescreen Interface, interactibles, Asset Management

[INTENDED FILE TYPES]
📁 txt, yaml, json, svg, jpg, png, gif, wmv, mp4, db, pdf, webp

[DIRECTORY]
🗂 WonderForge/
├── quasar.config.js
├── src/
│ ├── main.ts
│ ├── App.vue
│ ├── assets/
│ ├── boot/
│ ├── components/
│ ├── css/
│ ├── layout/
│ ├── views/
│ ├── router/
│ └── stores/
└── public/images/



[PROGRESS]
Installed modules, basic routing and page structures, created HomePage layout, beginning voice integration with SpeechKitt, accordion gallery, moved style and design sections to "WonderForge Styleguide", ButterflyMascot interactible, draggable-resizable magicscreen, remodeled router to use ActiveComponents, setup lazy loading, redesigned overall site structure.


[CONFIGURATION FILES]
index.html, quasar.config.js, tsconfig.json, postcss.config.js, .eslintrc.js, .prettierrc, package.json, main.ts, App.vue, useAppStore.ts, router/index.ts, types.ts

src/views/MagicFrame.vue: q-page-container, boundary for ScreenCards, utilizes SplashImage for background
src/views/SplashImage.vue: Displays a random background image from the src/assets/splash folder
src/views/ScreenCard.vue: q-card, selectable, resizable, and movable, representing an abstracted API call, utilizes SplashImage for inner display
src/views/: ErrorNotFound, UnderConstruction - end-point static pages
src/views/LoginForm.vue: Demo login interface [disabled]
src/views/RemoteControl.vue: GUI interface to Add, Select, Remove, and Change SplashImage on ScreenCards using useAppStore
src/views/HomePage.vue - Entry Portal
src/views/AccordionGallery.vue - Displays images in an accordion view
src/butterfly/ButterflyE.vue - Website mascot and inspiration for fancy js effects

[SUGGESTED REPLY FORMAT]
1. Emoticon and brief project assessment
2. Improved code or request for file(s)
3. Additional comments

[REQUEST]
Evaluate my new ActiveComponents.ts file
// src/router/ActiveComponents.ts

//ActiveComponents lazy loads all components
//and assigns default component status to prefered components

const components = {
  // Website Framework
  HomePage: () => import('../layout/HomePage.vue'), //Home
  ErrorScreen: () => import('../views/ErrorScreen.vue'), //404
  UnderConstruction: () => import('../views/UnderConstruction.vue'), //Under Construction
  TitleBar: () => import('../views/TitleBar.vue'), //stylized title
  NavigationMenu: () => import('../views/NavigationMenu.vue'), //isActive components
  SettingsPanel: () => import('../views/SettingsPanel.vue'), //website configuration
  UserLogin: () => import('../views/UserLogin.vue'), // User Login

  //AssetManager
  AssetManager: () => import('../views/VueViewer.vue'), // General Asset manager
  EffectsManager: () => import('../views/VueViewer.vue'), // AssetManager customized for background screen effects
  ToyboxManager: () => import('../views/VueViewer.vue'), // EffectsManager customized for user interactions
  ArtManager: () => import('../views/VueViewer.vue'), // AssetManager customized for images
  GameManager: () => import('../views/VueViewer.vue'), // AssetManager customized for gamescreen games
  PromptDesigner: () => import('../views/TextInput.vue'), //AssetManager customized for text management
  ProjectManager: () => import('../views/TextInput.vue'), //AssetManager customized for project planning
  CardDesigner: () => import('../views/TextInput.vue'), //AssetManager customized for interface design
  CodeDesigner: () => import('../views/TextInput.vue'), //AssetManager customized for code design
  ApiManager: () => import('../views/TextInput.vue'), //AssetManager customized for Api interactions
  SiteDesigner: () => import('../views/TextInput.vue'), //AssetManager customized for website design
  GalleryDesigner: () => import('../views/TextInput.vue'), //SiteDesigner customized for art gallery design

  //Interactibles
  ChatInterface: () => import('../components/ChatInterface.vue'), // Chatroom Interface
  VoiceControl: () => import('../components/VoiceControl.vue'), //basic voice pickup and text output
  MagicRemote: () => import('../components/MagicRemote.vue'), //modular interface controller
  MagicFrame: () => import('../components/MagicFrame.vue'), //resizeable and draggable stylized window frame
  RainEffect: () => import('../components/zoo/RainEffect.vue'), //background screen effect
  LavaLampEffect: () => import('../components/lava/LavaLamp.vue'), //background screen effect
  SoapBubbleEffect: () => import('../components/zoo/SoapBubbles.vue'), //background screen effect
  ButterflyEffect: () => import('../components/ButterflyEffect.vue'), //website mascot interactible
  RandomText: () => import('../views/Randomtext.vue'), //RandomText(parameters)
  RandomImage: () => import('../views/RandomImage.vue'), // RandomImage(parameters)

  //CodeCards
  CodeCard: () => import('../views/ScreenCard.vue'), // Base class for customizable cards
  AvatarCard: () => import('../views/ScreenCard.vue'), // Avatar CodeCard
  UserCard: () => import('../views/ScreenCard.vue'), //AvatarCard for custom user avatar
  RobotCard: () => import('../views/ScreenCard.vue'), //AvatarCard with API Implementation
  ChatGPTCard: () => import('../views/ScreenCard.vue'), //RobotCard with ChatGPT Implementation
  PromptCard: () => import('../views/ScreenCard.vue'), //ChatGPTCard with PromptDesigner implementation
  ArtistCard: () => import('../views/ScreenCard.vue'), //AvatarCard for Stable Diffusion Implementation
  AlexaCard: () => import('../views/ScreenCard.vue'), //RobotCard with Alexa implementation

  //Gamescreen
  GameScreen: () => import('../components/WIP/MagicScreen.vue'), //modular screen display interface with step-based save system
  MinimalPanel: () => import('../layout/AdventurePanel.vue'), //Gamescreen panel with minimal interface and layer management
  ChatPanel: () => import('../layout/AdventurePanel.vue'), //Gamescreen interface panel for openai chat
  ArtPanel: () => import('../layout/AdventurePanel.vue'), //Gamescreen interface panel for Stable Diffusion Art Generation
  AdventurePanel: () => import('../layout/AdventurePanel.vue'), //Gamescreen interface panel for text adventures
  CosmosGame: () => import('../game/AdventurManager.vue'), //AdventurePanel with PromptCard implementation
  SerendipityGame: () => import('../view/AdventurManager.vue'), //CosmosGame with TaskManagement implementation

  //ArtGallery
  ArtGallery: () => import('../views/AccordionGallery.vue'), //customizable Art Asset gallery viewer
  GiftShop: () => import('../views/AccordionGallery.vue'), //Art Gallery with POD integration
  MembershipClub: () => import('../views/AccordionGallery.vue'), //subscription portal
  ShoppingCart: () => import('../views/AccordionGallery.vue'), //shopping cart
};

export const defaultActiveRoutes = Object.entries(components).map(
  ([name, component]) => ({
    name,
    component,
  })
);
