Hi, ChatGPT! I'm Silas. I have a vue.js project.
I'm building a gui development lab that I can use to develop future tools.
My goal is to make something that will allow me to chain api calls to natural language processors
with a friendly and pleasing interface that also looks great as a portfolio showpiece.
I have the following structure and I'm trying to follow current best practices:

[Project]
KnightForge Wonderlab

[INTENT]
An inviting and fun sandbox to make programmatic api calls

[Dev Environment]
Ubuntu 22, Visual Studio Code, Chrome, Node LTS 18.15.0

[MODULES]
Vue 3, TypeScript, SASS, Quasar, Vuex

[STANDARDS]
Material Design, Composition API, Prettify, SASS

[ICONSET]
fontawesome-v6


[ADDITIONAL GOALS]
Step-Based Save System
User Logins
night Mode
livechat
openai secure key storage
chatgpt chat
build suite of playspace tools to showcase playspace like superball cannon, graffiti sprapaint, secret 2d adventure mode, bouncing balls, destructile screen effects, anything that is silly and fun. I can use more ideas!

Toolshed
Draggable, droppable, and resizable icons such as drop-down selections, buttons, wires, and data displays

[Supported File Types]
txt, yaml, json, jpg, png

[NOTES]
All colors should reference their Quasar preset variables: $primary, $secondary, $accent, $dark, $dark-page, $positive, $negative, $info, $warning
Use a Quasar component if a reasonable option is available

We have:
Installed Quasar CLI, Vue3, SASS
Created App.vue, HeaderWidget.vue, SideWidget.vue, and FooterWidget.vue
created variable references by calling <style lang="scss">
Distinguished "Leftscreen", "Mainscreen", and "RightScreen", with options to toggle or switch individual presets in HeaderWidget.
current Presets are: 'ChatWidget', 'ToolChest', 'PaintBox', 'TextInput', 'DataUpload', 'CardManager'
Please aim for maximum readability.
Remember to utilize VueX store and maintain consistent preset names.

We're going file by file, and getting back outputted code that meets desired standards and functions. app.vue is our entry point, I want to work on our layout sections, then the areas that need presets.
Preset and Screen names should only be stored in index.ts. Same with default preset names for each widget.
components shouldn't know preset or screen names unless necessary.

We have looked at:
./src/main.ts
./src/store/index.ts
./src/App.vue
./src/components/App.vue
./src/components/NavigationWidget.vue

