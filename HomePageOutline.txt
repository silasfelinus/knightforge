[PROJECT]
ðŸ”§ WonderForge: A Modern GUI sandbox for interfacing with Natural Language Processors.

[FRAMEWORK]
ðŸ’» Vue3 SPA, Composition API, Typescript, Quasar, Vue-Router, Interactjs, ESLint, Prettier, SCSS

[REFERENCE]
Vue3 (https://vuejs.org/guide/introduction.html)
Vue-Router (https://router.vuejs.org/guide/)
Typescript (https://www.typescriptlang.org/)
Quasar CLI (https://quasar.dev/start/quasar-cli)

[MODULES]
eslint eslint-plugin-prettier prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin @vue/eslint-config-typescript @vue/eslint-config-prettier eslint-plugin-vue @vue/compiler-sfc vue-tsc vue-router pinia quasar sass magic-string@latest npm-check-updates interactjs

[PRINCIPLES]
Visualize. Plan. Outline. Act.
Kaizen: Make consistent, iterative improvements towards the goal.
DRY Principle: Use composables and modular code to reduce future work.
Best Practices are good; Wise practices are better.

[BASE FILES]
quasar.config.js, main.ts, App.vue, index.html, tsconfig postcss.config.js, .eslintrc.js, .prettierrc, package.json, router/index.ts, css/app.scss, quasar.variables.scss, router/index.ts, stores/types.ts

[ASSETS/]
/assets/galleries/*.json
/assets/photosets/{photoset.id}/[Image.fileName].webp

[LAUNCH ORDER]
main.ts > App.vue > router/index.ts > HomePage.vue
HomePage > [routes]
MagicFrame > GameScreen > [gameScreenRoutes]

[GLOBAL TYPES]
Tag {name: string}

FilePath {filePath: string}

Image {fileName: string;filePath: string;tags?: Tag[]; positivePrompt?: string;negativePrompt?: string;photoset?: string;modeler?: string;height?: number; width?: number; steps?: number; cfg?: number; sampler?: string; seed?: number;}

Modeler {hash?: string; tags?: Tag[]; localPath?: string; infoUrl?: string; images: Image[];}

GameScreen { id: number; route: string}


[routes]
ButterflyMascot //right sidebar, website mascot interactible
HomePage  //base layout with header, footer, two sidebars, and flex center
MagicFrame //center panel boundary, add GameScreen, Remove selected GameScreen.
NavigationMenu //left sidebar, gamescreen links
SplashMessage //header, random splash text
TitleBar //q-header, stylized title

[gameScreenRoutes]
AccordionGallery //visual menu interface
ErrorScreen //error handling
GameScreen //interactjs resizable screen that displays components based on preset routing
MagicRemote //selects GameScreens by id, change gamescreen component,
LavaLamp //lava lamp screen effect
RainEffect //raindrop screen effect
SoapBubbles //soapbubbles screen effect
SplashImage //random image
UnderConstruction //under construction screen

[MagicFrame.vue]
Revise this outline, then output code for this project
MagicFrame: stylized full color border, background color, plus icon on top of border creates new GameScreen inside window, Remote icon creates new MagicRemote, appropriate icons to change MagicFrame background layer to lavalamp, soapbubbles, raineffect, splashimage, underconstruction
